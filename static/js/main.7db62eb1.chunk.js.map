{"version":3,"sources":["assets/logo.png","assets/naruto_song.mp3","components/PlaySound.js","App.js","reportWebVitals.js","index.js"],"names":["PlaySound","handleSongPlaying","handleSongLoading","handleSongFinishedPlaying","useState","isPlaying","setIsPlaying","className","onClick","url","NarutoSong","playStatus","Sound","status","PLAYING","STOPPED","playFromPosition","onLoading","onPlaying","onFinishedPlaying","App","src","logo","alt","width","href","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAAe,G,MAAA,IAA0B,kC,uBCA1B,MAA0B,wCCyB1BA,EArBG,SACdC,EACAC,EACAC,GACE,IAAD,EACiCC,oBAAS,GAD1C,mBACMC,EADN,KACiBC,EADjB,KAED,OACI,gCACI,wBAAQC,UAAU,oDAAoDC,QAAS,kBAAMF,GAAcD,IAAnG,SAAiHA,EAAmC,oBAAvB,uBAC7H,cAAC,IAAD,CACII,IAAKC,EACLC,WAAYN,EAAYO,IAAMC,OAAOC,QAAUF,IAAMC,OAAOE,QAC5DC,iBAAkB,IAClBC,UAAWf,EACXgB,UAAWjB,EACXkB,kBAAmBhB,QCWpBiB,MA3Bf,WACE,OACE,qBAAKb,UAAU,MAAf,SACE,sBAAKA,UAAU,0BAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKc,IAAKC,EAAMC,IAAI,oBAAoBC,MAAM,UAEhD,sBAAKjB,UAAU,0DAAf,UACE,mBAAGA,UAAU,YAAb,8BACA,kEAEF,sBAAKA,UAAU,mBAAf,UACE,mBAAGA,UAAU,sBAAb,yCACA,mBAAGkB,KAAK,6BAA6BC,OAAO,SAA5C,SACE,wBACEnB,UAAU,kIADZ,mCAMF,cAAC,EAAD,aCXKoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7db62eb1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.59d338b8.png\";","export default __webpack_public_path__ + \"static/media/naruto_song.dedcdac3.mp3\";","import { useState } from \"react\";\r\nimport Sound from \"react-sound\";\r\nimport NarutoSong from \"../assets/naruto_song.mp3\"\r\n\r\nconst PlaySound = (\r\n    handleSongPlaying,\r\n    handleSongLoading,\r\n    handleSongFinishedPlaying\r\n) => {\r\n    const [isPlaying, setIsPlaying] = useState(false)\r\n    return (\r\n        <div>\r\n            <button className=\"font-mono text-lg text-gray-800 text-center mt-10\" onClick={() => setIsPlaying(!isPlaying)}>{!isPlaying ? 'Play amazing muzik' : \"Please don't stop\"}</button>\r\n            <Sound\r\n                url={NarutoSong}\r\n                playStatus={isPlaying ? Sound.status.PLAYING : Sound.status.STOPPED}\r\n                playFromPosition={300 /* in milliseconds */}\r\n                onLoading={handleSongLoading}\r\n                onPlaying={handleSongPlaying}\r\n                onFinishedPlaying={handleSongFinishedPlaying}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaySound","import logo from './assets/logo.png';\r\nimport PlaySound from \"./components/PlaySound\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"lg:container lg:mx-auto\">\r\n        <div className=\"flex justify-center\">\r\n          <img src={logo} alt=\"stikomvalley-logo\" width=\"256\" />\r\n        </div>\r\n        <div className=\"text-center font-mono text-lg text-gray-800 text-center\">\r\n          <p className=\"font-bold\">stikomvalley.org</p>\r\n          <p>a bunch of tech-loving crazies</p>\r\n        </div>\r\n        <div className=\"mt-8 text-center\">\r\n          <p className=\"font-black text-3xl\">Hangout with us, digitally.</p>\r\n          <a href=\"https://discord.gg/XAaXrKE\" target=\"_blank\">\r\n            <button\r\n              className=\"bg-purple-500 hover:bg-purple-400 text-white font-bold py-2 px-4 border-purple-700 hover:border-purple-500 rounded discord mt-8\"\r\n            >\r\n              Join Discord Server\r\n            </button>\r\n          </a>\r\n          <PlaySound />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/main.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}